{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "HTTP Request Node Schema",
  "description": "Schema for n8n HTTP Request node validation",
  "required": ["id", "name", "type", "typeVersion", "position", "parameters"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the node"
    },
    "name": {
      "type": "string",
      "description": "Display name of the node"
    },
    "type": {
      "type": "string",
      "enum": ["n8n-nodes-base.httpRequest"],
      "description": "Node type identifier"
    },
    "typeVersion": {
      "type": "number",
      "description": "Version of the node type"
    },
    "position": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 2,
      "maxItems": 2,
      "description": "Position coordinates [x, y]"
    },
    "parameters": {
      "type": "object",
      "required": ["url", "method"],
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to make the request to"
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST", "PUT", "PATCH", "DELETE", "HEAD", "OPTIONS"],
          "description": "HTTP method to use"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "none",
            "basicAuth",
            "headerAuth",
            "oAuth1",
            "oAuth2",
            "predefinedCredentialType"
          ],
          "description": "Authentication method"
        },
        "requestMethod": {
          "type": "string",
          "description": "Alternative method property"
        },
        "sendHeaders": {
          "type": "boolean",
          "description": "Whether to send headers"
        },
        "headerParameters": {
          "type": "object",
          "description": "HTTP headers to send"
        },
        "sendQuery": {
          "type": "boolean",
          "description": "Whether to send query parameters"
        },
        "queryParameters": {
          "type": "object",
          "description": "Query parameters to send"
        },
        "sendBody": {
          "type": "boolean",
          "description": "Whether to send a request body"
        },
        "bodyParameters": {
          "type": "object",
          "description": "Body parameters"
        },
        "jsonParameters": {
          "type": "object",
          "description": "JSON body parameters"
        },
        "options": {
          "type": "object",
          "description": "Additional options"
        }
      }
    },
    "disabled": {
      "type": "boolean",
      "description": "Whether the node is disabled"
    },
    "notes": {
      "type": "string",
      "description": "Notes about the node"
    },
    "continueOnFail": {
      "type": "boolean",
      "description": "Whether to continue execution if this node fails"
    },
    "alwaysOutputData": {
      "type": "boolean",
      "description": "Whether to always output data even on failure"
    },
    "executeOnce": {
      "type": "boolean",
      "description": "Whether to execute only once"
    },
    "retryOnFail": {
      "type": "boolean",
      "description": "Whether to retry on failure"
    },
    "maxTries": {
      "type": "number",
      "minimum": 1,
      "description": "Maximum number of retry attempts"
    },
    "waitBetweenTries": {
      "type": "number",
      "minimum": 0,
      "description": "Wait time between retries in milliseconds"
    }
  }
}
